// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SupportProvidersSDK
import Foundation
@_exported import SupportProvidersSDK
import Swift
import UIKit
import ZendeskCoreSDK
@_hasMissingDesignatedInitializers @objc(ZDKRequestUpdates) public class RequestUpdates : ObjectiveC.NSObject {
  @objc final public let requestUpdates: [Swift.String : Swift.Int]
  @objc public var totalUpdates: Swift.Int {
    @objc get
  }
  @objc public func isRequestUnread(_ requestId: Swift.String) -> Swift.Bool
  @objc public func hasUpdatedRequests() -> Swift.Bool
  @objc deinit
  @objc override dynamic public init()
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(ZDKHelpCenterBlips) public class HelpCenterBlips : ObjectiveC.NSObject {
  @objc deinit
}
extension HelpCenterBlips {
  @objc public static func blipArticleViewed(_ pageTitle: Swift.String, url: Swift.String, navigatorLanguage: Swift.String, pageId: Swift.Int64, pageLocale: Swift.String)
  @objc public static func blipSearchQuery(_ query: Swift.String)
  @objc public static func blipArticleVote(_ articleId: Swift.String, vote: Swift.Int)
}
@_inheritsConvenienceInitializers @objc(ZDKAttachmentSettings) public class AttachmentSettings : ObjectiveC.NSObject, Swift.Decodable, ZendeskCoreSDK.DecodableDefault {
  @objc final public let enabled: Swift.Bool
  @objc final public let maxAttachmentSize: Swift.Int
  required public init(from decoder: Swift.Decoder) throws
  @objc override required dynamic public init()
  public typealias DefaultType = SupportProvidersSDK.AttachmentSettings
  public static var `default`: SupportProvidersSDK.AttachmentSettings {
    get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ZDKAttachmentSettingsProvider : ObjectiveC.NSObject {
  @objc public static func getAttachmentSettings(callback: @escaping (SupportProvidersSDK.AttachmentSettings?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
public struct NoActionBlip : Swift.Encodable {
  public func encode(to encoder: Swift.Encoder) throws
}
@_hasMissingDesignatedInitializers @objc(ZDKRequestForStorage) public class RequestForStorage : ObjectiveC.NSObject, Swift.Codable {
  public var commentCount: Swift.Int
  @objc deinit
  @objc override dynamic public init()
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
extension RequestForStorage {
  @objc dynamic public class func createFromRequest(_ request: SupportProvidersSDK.ZDKRequest, readCommentCount: Swift.Int) -> SupportProvidersSDK.RequestForStorage
  @objc dynamic public func incrementCommentCounts()
}
public protocol ConversationsSettingsProviderProtocol {
  static func getConversationsSettings(callback: @escaping (SupportProvidersSDK.ConversationsSettings?) -> Swift.Void)
}
@_inheritsConvenienceInitializers @objc(ZDKConversationsSettings) public class ConversationsSettings : ObjectiveC.NSObject, Swift.Decodable, ZendeskCoreSDK.DecodableDefault {
  public typealias DefaultType = SupportProvidersSDK.ConversationsSettings
  @objc final public let enabled: Swift.Bool
  required public init(from decoder: Swift.Decoder) throws
  @objc override required dynamic public init()
  public static var `default`: SupportProvidersSDK.ConversationsSettings {
    get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ZDKConversationsSettingsProvider : ObjectiveC.NSObject, SupportProvidersSDK.ConversationsSettingsProviderProtocol {
  @objc public static func getConversationsSettings(callback: @escaping (SupportProvidersSDK.ConversationsSettings?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
public enum DispatcherNotifications {
  public static let UnauthorizedNotificationName: Swift.String
}
@_inheritsConvenienceInitializers @objc public class DispatcherAdapter : ObjectiveC.NSObject {
  @objc public static func performRequest(zendesk: ZendeskCoreSDK.Zendesk, urlRequest: Foundation.URLRequest, requiresAuth: Swift.Bool, completionHandler: @escaping (Foundation.URLResponse?, Foundation.Data?, Swift.Error?) -> Swift.Void)
  @objc public static func convertError(response: Foundation.URLResponse?, originalError error: Swift.Error?) -> Swift.Error?
  @objc public static func clearSettingsAndSession()
  @objc deinit
  @objc override dynamic public init()
}
@objc(ZDKLegacyRequestStorageMigrator) public class LegacyRequestStorageMigrator : ObjectiveC.NSObject {
  @objc public init(withRequestStorage requestStorage: SupportProvidersSDK.RequestStorage)
  @objc deinit
  @objc override dynamic public init()
}
extension LegacyRequestStorageMigrator {
  @objc dynamic public func checkAndMigrateOldTicketIds()
}
@_inheritsConvenienceInitializers @objc(ZDKSupportSettings) public class SupportSettings : ObjectiveC.NSObject, Swift.Decodable, ZendeskCoreSDK.DecodableDefault {
  public typealias DefaultType = SupportProvidersSDK.SupportSettings
  @objc final public let neverRequestEmail: Swift.Bool
  @objc final public let showClosedRequests: Swift.Bool
  @objc final public let showReferrerLogo: Swift.Bool
  @objc final public let referrerUrl: Swift.String
  @objc final public let systemMessage: Swift.String
  @objc final public let conversationSettings: SupportProvidersSDK.ConversationsSettings
  @objc final public let attachmentSettings: SupportProvidersSDK.AttachmentSettings
  @objc final public let ticketFormsSettings: SupportProvidersSDK.TicketFormsSettings
  @objc final public let contactUsSettings: SupportProvidersSDK.ContactUsSettings
  required public init(from decoder: Swift.Decoder) throws
  @objc override required dynamic public init()
  public static var `default`: SupportProvidersSDK.SupportSettings {
    get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ZDKSupportSettingsProvider : ObjectiveC.NSObject {
  @objc public static func getSupportSettings(callback: @escaping (SupportProvidersSDK.SupportSettings?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(ZDKRequestBlips) public class RequestBlips : ObjectiveC.NSObject {
  @objc deinit
}
extension RequestBlips {
  @objc public static func requestCreatedBlip(_ requestId: Swift.String)
  @objc public static func requestUpdateBlip(_ requestId: Swift.String)
}
@_inheritsConvenienceInitializers @objc(ZDKHelpCenterSettings) public class HelpCenterSettings : ObjectiveC.NSObject, Swift.Decodable, ZendeskCoreSDK.DecodableDefault {
  public typealias DefaultType = SupportProvidersSDK.HelpCenterSettings
  @objc final public let helpCenterArticleVotingEnabled: Swift.Bool
  @objc final public let enabled: Swift.Bool
  @objc final public let locale: Swift.String
  required public init(from decoder: Swift.Decoder) throws
  @objc override required dynamic public init()
  public static var `default`: SupportProvidersSDK.HelpCenterSettings {
    get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ZDKHelpCenterSettingsProvider : ObjectiveC.NSObject {
  @objc public static func getHelpCenterSettings(callback: @escaping (SupportProvidersSDK.HelpCenterSettings?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
@_inheritsConvenienceInitializers @objc(ZDKTicketFormsSettings) public class TicketFormsSettings : ObjectiveC.NSObject, Swift.Decodable, ZendeskCoreSDK.DecodableDefault {
  public typealias DefaultType = SupportProvidersSDK.TicketFormsSettings
  @objc final public let available: Swift.Bool
  required public init(from decoder: Swift.Decoder) throws
  @objc override required dynamic public init()
  public static var `default`: SupportProvidersSDK.TicketFormsSettings {
    get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ZDKTicketFormsSettingsProvider : ObjectiveC.NSObject {
  @objc public static func getTicketFormsSettings(callback: @escaping (SupportProvidersSDK.TicketFormsSettings?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
@_inheritsConvenienceInitializers @objc(ZDKContactUsSettings) public class ContactUsSettings : ObjectiveC.NSObject, Swift.Decodable, ZendeskCoreSDK.DecodableDefault {
  public typealias DefaultType = SupportProvidersSDK.ContactUsSettings
  @objc final public let tags: [Swift.String]
  @objc public init(with tags: [Swift.String])
  required public init(from decoder: Swift.Decoder) throws
  @objc override required dynamic public init()
  public static var `default`: SupportProvidersSDK.ContactUsSettings {
    get
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class ZDKContactUsSettingsProvider : ObjectiveC.NSObject {
  @objc public static func getContactUsSettings(callback: @escaping (SupportProvidersSDK.ContactUsSettings?) -> Swift.Void)
  @objc deinit
  @objc override dynamic public init()
}
public protocol HelpCenterProviderProtocol {
  func upVoteArticle(withId articleId: Swift.String!, withCallback callback: SupportProvidersSDK.ZDKHelpCenterCallback!)
}
extension ZDKHelpCenterProvider : SupportProvidersSDK.HelpCenterProviderProtocol {
}
@_hasMissingDesignatedInitializers @objc(ZDKHelpCenterSectionViewModel) final public class HelpCenterSectionViewModel : ObjectiveC.NSObject, Swift.Decodable {
  @objc final public let name: Swift.String
  @objc final public let articles: [SupportProvidersSDK.HelpCenterArticleViewModel]
  @objc final public let id: Swift.String, category_id: Swift.String
  @objc final public let article_count: Swift.Int
  @objc final public var detailTitle: Swift.String {
    @objc get
  }
  required public init(from decoder: Swift.Decoder) throws
  @objc final public func sectionByReplacing(articles: [SupportProvidersSDK.HelpCenterArticleViewModel]) -> SupportProvidersSDK.HelpCenterSectionViewModel
  @objc override final public func isEqual(_ object: Any?) -> Swift.Bool
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc(ZDKHelpCenterArticleViewModel) final public class HelpCenterArticleViewModel : ObjectiveC.NSObject, Swift.Decodable {
  @objc final public let name: Swift.String
  @objc final public let id: Swift.String, section_id: Swift.String
  required public init(from decoder: Swift.Decoder) throws
  @objc public static func convert(articles: [SupportProvidersSDK.ZDKHelpCenterArticle]) -> [SupportProvidersSDK.HelpCenterArticleViewModel]
  @objc deinit
  @objc override dynamic public init()
}
extension ZDKRequestProvider {
  @objc dynamic public func getUpdatesForDevice(callback: @escaping (SupportProvidersSDK.RequestUpdates?) -> Swift.Void)
  @objc dynamic public func markRequestAsRead(_ requestId: Swift.String, withCommentCount commentCount: Swift.Int)
  @objc dynamic public func markRequestAsUnread(_ requestId: Swift.String)
  public static func calculateRequestUpdates(_ requests: [SupportProvidersSDK.RequestForStorage]) -> SupportProvidersSDK.RequestUpdates
  @objc dynamic public func updateRequestStorageWithRequests(_ requests: [SupportProvidersSDK.ZDKRequest])
}
@_inheritsConvenienceInitializers @objc public class HTMLSanitizer : ObjectiveC.NSObject {
  @objc public static func clean(html: Swift.String) -> Swift.String
  @objc deinit
  @objc override dynamic public init()
}
@objc(ZDKCustomField) final public class CustomField : ObjectiveC.NSObject {
  @objc final public let fieldId: Swift.Int64
  @objc final public let value: Any?
  @available(swift, obsoleted: 1.0)
  @objc convenience public init(fieldId: Foundation.NSNumber, value: Any?)
  public init(fieldId: Swift.Int64, value: Any?)
  @objc convenience public init(dictionary: [Swift.String : Any])
  @objc final public var customFieldDictionary: [Swift.String : Any] {
    @objc get
  }
  @objc deinit
  @objc override dynamic public init()
}
public struct RequestUserAction : Swift.Encodable {
  public init(requestId: Swift.String)
  public func encode(to encoder: Swift.Encoder) throws
}
public protocol RequestStorageProtocol {
  func store(value: Any?, forKey key: Swift.String) -> Swift.Bool
  func value(forKey key: Swift.String) -> Any?
}
extension SessionStore : SupportProvidersSDK.RequestStorageProtocol {
}
@_hasMissingDesignatedInitializers @objc(ZDKRequestStorage) public class RequestStorage : ObjectiveC.NSObject {
  @objc convenience public init(withZendesk zendesk: ZendeskCoreSDK.Zendesk)
  public func getRequests() -> [SupportProvidersSDK.RequestForStorage]
  @objc public func getRequestForId(_ requestId: Swift.String) -> SupportProvidersSDK.RequestForStorage?
  @objc override dynamic public init()
  @objc deinit
}
extension RequestStorage {
  @objc dynamic public func getRequestIds() -> [Swift.String]
  @discardableResult
  @objc dynamic public func storeRequest(_ request: SupportProvidersSDK.RequestForStorage?) -> Swift.Bool
  @discardableResult
  @objc dynamic public func storeRequestsAndResetCacheTime(_ requests: [SupportProvidersSDK.RequestForStorage]) -> Swift.Bool
}
@objc(ZDKHelpCenterCategoryViewModelContainer) final public class HelpCenterCategoryViewModelContainer : ObjectiveC.NSObject, Swift.Decodable {
  required public init(from decoder: Swift.Decoder) throws
  @objc public static func parse(data: Foundation.Data) throws -> [SupportProvidersSDK.HelpCenterCategoryViewModel]
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc(ZDKHelpCenterCategoryViewModel) final public class HelpCenterCategoryViewModel : ObjectiveC.NSObject, Swift.Decodable {
  @objc final public let name: Swift.String
  @objc final public var sections: [SupportProvidersSDK.HelpCenterSectionViewModel]
  final public let id: Swift.String
  final public let section_count: Swift.Int
  required public init(from decoder: Swift.Decoder) throws
  @objc final public func update(section newSection: SupportProvidersSDK.HelpCenterSectionViewModel) -> SupportProvidersSDK.HelpCenterCategoryViewModel
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc(ZDKSupport) public class Support : ObjectiveC.NSObject {
  @objc public var helpCenterLocaleOverride: Swift.String?
  @objc public class func initialize(withZendesk zendesk: ZendeskCoreSDK.Zendesk?)
  @objc public static var instance: SupportProvidersSDK.Support? {
    @objc get
  }
  @objc public func refreshRequest(requestId: Swift.String) -> Swift.Bool
  @objc deinit
  @objc override dynamic public init()
}
